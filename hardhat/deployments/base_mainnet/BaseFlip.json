{
  "address": "0xD7d626aA0A0960Ae7205810fE15bff260af8eaFc",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winner",
          "type": "string"
        }
      ],
      "name": "CoinFlipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "GameReset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "PlayerJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "checkGameTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "player1",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "player2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "enum BaseFlip.GameState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "resetGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1fa2fad2d2eae24e5698ba95ce0331740863a322cbdb775b48196d7b5406cb92",
  "receipt": {
    "to": null,
    "from": "0x46d2bFa40A0f95B5523570bf62F9d680BBcB56fE",
    "contractAddress": "0xD7d626aA0A0960Ae7205810fE15bff260af8eaFc",
    "transactionIndex": 2,
    "gasUsed": "1588215",
    "logsBloom": "0x
    "blockHash": "0xd2816e4151634f7067c9e4705a3e5cfaec410709d70317ba2ba145b01921d4d0",
    "transactionHash": "0x1fa2fad2d2eae24e5698ba95ce0331740863a322cbdb775b48196d7b5406cb92",
    "logs": [],
    "blockNumber": 3309659,
    "cumulativeGasUsed": "1837429",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "165808ea0d888fa48e1b74b82acca2b4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winner\",\"type\":\"string\"}],\"name\":\"CoinFlipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"checkGameTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum BaseFlip.GameState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"resetGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A coin flip game where two players bet equal amounts of ether. The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BaseFlip\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaseFlip.sol\":\"BaseFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BaseFlip.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title BaseFlip\\n * @dev A coin flip game where two players bet equal amounts of ether.\\n * The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.\\n */\\ncontract BaseFlip {\\n    enum GameState { WaitingForPlayer, GameStarted, GameOver }\\n\\n    struct Game {\\n        address payable player1;\\n        address payable player2;\\n        uint betAmount;\\n        uint startTime;\\n        GameState currentState;\\n    }\\n\\n    mapping(uint => Game) public games;\\n    mapping(address => uint) public pendingWithdrawals;\\n    uint public gameIdCounter;\\n    uint public constant feePercent = 5;\\n    uint public constant timeLimit = 15 minutes;\\n    uint public collectedFees;\\n\\n    address public owner;\\n\\n    event GameStarted(uint indexed gameId, address player);\\n    event PlayerJoined(uint indexed gameId, address player);\\n    event CoinFlipped(uint indexed gameId, string winner);\\n    event GameReset(uint indexed gameId);\\n    event Withdrawal(address indexed user, uint amount);\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Caller is not the owner\\\");\\n        _;\\n    }\\n\\n    modifier inState(uint gameId, GameState _state) {\\n        require(games[gameId].currentState == _state, \\\"Current state does not allow this action\\\");\\n        _;\\n    }\\n\\n    function startGame(uint _betAmount) public payable {\\n        require(msg.value == _betAmount, \\\"Sent ether should be equal to bet amount\\\");\\n\\n        games[gameIdCounter].player1 = payable(msg.sender);\\n        games[gameIdCounter].betAmount = _betAmount;\\n        games[gameIdCounter].startTime = block.timestamp;\\n        games[gameIdCounter].currentState = GameState.GameStarted;\\n\\n        emit GameStarted(gameIdCounter, msg.sender);\\n        \\n        gameIdCounter++;\\n    }\\n\\n    function joinGame(uint gameId) public payable inState(gameId, GameState.GameStarted) {\\n        require(msg.value == games[gameId].betAmount, \\\"Sent ether should be equal to bet amount\\\");\\n        require(block.timestamp <= games[gameId].startTime + timeLimit, \\\"Time limit for joining the game has passed\\\");\\n\\n        games[gameId].player2 = payable(msg.sender);\\n        games[gameId].currentState = GameState.GameOver;\\n        emit PlayerJoined(gameId, msg.sender);\\n\\n        determineWinner(gameId);\\n    }\\n\\n    function determineWinner(uint gameId) private inState(gameId, GameState.GameOver) {\\n        bytes32 hashed = keccak256(abi.encodePacked(games[gameId].player1, games[gameId].player2, blockhash(block.number - 1)));\\n        uint randomNumber = uint(hashed) % 2;\\n        uint winnings = games[gameId].betAmount * 2;\\n        uint fee = winnings * feePercent / 100;\\n\\n        winnings = winnings - fee;\\n        collectedFees += fee;\\n\\n        string memory winningPlayer;\\n\\n        if(randomNumber == 0) {\\n            pendingWithdrawals[games[gameId].player1] += winnings;\\n            winningPlayer = \\\"Player 1 wins!\\\";\\n        } else {\\n            pendingWithdrawals[games[gameId].player2] += winnings;\\n            winningPlayer = \\\"Player 2 wins!\\\";\\n        }\\n\\n        emit CoinFlipped(gameId, winningPlayer);\\n    }\\n\\n    function withdraw() public {\\n        uint amount = pendingWithdrawals[msg.sender];\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        pendingWithdrawals[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n\\n        emit Withdrawal(msg.sender, amount);\\n    }\\n\\n    function resetGame(uint gameId) public inState(gameId, GameState.GameOver) {\\n        require(msg.sender == games[gameId].player1 || msg.sender == games[gameId].player2, \\\"Only a player of the game can reset it\\\");\\n\\n        games[gameId].player1 = payable(address(0));\\n        games[gameId].player2 = payable(address(0));\\n        games[gameId].betAmount = 0;\\n        games[gameId].startTime = 0;\\n        games[gameId].currentState = GameState.WaitingForPlayer;\\n\\n        emit GameReset(gameId);\\n    }\\n\\n    function checkGameTimeout(uint gameId) public inState(gameId, GameState.GameStarted) {\\n        require(block.timestamp > games[gameId].startTime + timeLimit, \\\"Game has not yet timed out\\\");\\n\\n        pendingWithdrawals[games[gameId].player1] += games[gameId].betAmount;\\n        games[gameId].currentState = GameState.GameOver;\\n\\n        resetGame(gameId);\\n    }\\n\\n    function withdrawFees() public onlyOwner {\\n        uint fees = collectedFees;\\n        require(fees > 0, \\\"No fees to withdraw\\\");\\n\\n        collectedFees = 0;\\n        payable(msg.sender).transfer(fees);\\n    }\\n}\\n\",\"keccak256\":\"0xd354a69842bb2786dc31c000d65882ea5f75f35dc02548ba00a8476e654a6fed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b7f806100616000396000f3fe6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063e5ed1d5911610059578063e5ed1d5914610236578063efaa55a014610252578063f3f437031461026e578063fa7b7314146102ab576100c2565b80638da5cb5b146101b55780639003adfe146101e0578063c08d1fe51461020b576100c2565b8063117a5b90146100c75780631bb412d6146101085780633ccfd60b14610133578063476343ee1461014a5780634cf052d5146101615780637fd6f15c1461018a575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611246565b6102d4565b6040516100ff95949392919061133a565b60405180910390f35b34801561011457600080fd5b5061011d610357565b60405161012a919061138d565b60405180910390f35b34801561013f57600080fd5b5061014861035d565b005b34801561015657600080fd5b5061015f6104c1565b005b34801561016d57600080fd5b5061018860048036038101906101839190611246565b6105ed565b005b34801561019657600080fd5b5061019f6108d6565b6040516101ac919061138d565b60405180910390f35b3480156101c157600080fd5b506101ca6108db565b6040516101d791906113c9565b60405180910390f35b3480156101ec57600080fd5b506101f5610901565b604051610202919061138d565b60405180910390f35b34801561021757600080fd5b50610220610907565b60405161022d919061138d565b60405180910390f35b610250600480360381019061024b9190611246565b61090d565b005b61026c60048036038101906102679190611246565b610a72565b005b34801561027a57600080fd5b5061029560048036038101906102909190611410565b610c91565b6040516102a2919061138d565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611246565b610ca9565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db9061149a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561046f573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516104b6919061138d565b60405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611506565b60405180910390fd5b600060035490506000811161059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290611572565b60405180910390fd5b60006003819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105e9573d6000803e3d6000fd5b5050565b806002806002811115610603576106026112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610638576106376112c3565b5b14610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90611604565b60405180910390fd5b60008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610747575060008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d90611696565b60405180910390fd5b600080600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060020181905550600080600085815260200190815260200160002060030181905550600080600085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561089f5761089e6112c3565b5b0217905550827fde24ae18b2bda089720ca38332df93ab6195d7b5b3b0981ccae6b33e0a6c3f9b60405160405180910390a2505050565b600581565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b61038481565b80341461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690611728565b60405180910390fd5b33600080600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600080600254815260200190815260200160002060020181905550426000806002548152602001908152602001600020600301819055506001600080600254815260200190815260200160002060040160006101000a81548160ff02191690836002811115610a1857610a176112c3565b5b02179055506002547ffadb9547847a0c2c31f4c02590545e318d33d7aae99071caecf3fa4ce3cd7dca33604051610a4f91906113c9565b60405180910390a260026000815480929190610a6a90611777565b919050555050565b806001806002811115610a8857610a876112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610abd57610abc6112c3565b5b14610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611604565b60405180910390fd5b600080848152602001908152602001600020600201543414610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b90611728565b60405180910390fd5b61038460008085815260200190815260200160002060030154610b7791906117bf565b421115610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb090611865565b60405180910390fd5b3360008085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610c4657610c456112c3565b5b0217905550827f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd633604051610c7b91906113c9565b60405180910390a2610c8c83610e84565b505050565b60016020528060005260406000206000915090505481565b806001806002811115610cbf57610cbe6112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610cf457610cf36112c3565b5b14610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90611604565b60405180910390fd5b61038460008085815260200190815260200160002060030154610d5791906117bf565b4211610d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8f906118d1565b60405180910390fd5b600080848152602001908152602001600020600201546001600080600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e3191906117bf565b92505081905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610e7157610e706112c3565b5b0217905550610e7f836105ed565b505050565b806002806002811115610e9a57610e996112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610ecf57610ece6112c3565b5b14610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0690611604565b60405180910390fd5b600080600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600143610f8a91906118f1565b40604051602001610f9d93929190611998565b604051602081830303815290604052805190602001209050600060028260001c610fc79190611a04565b90506000600260008088815260200190815260200160002060020154610fed9190611a35565b9050600060646005836110009190611a35565b61100a9190611a77565b9050808261101891906118f1565b9150806003600082825461102c91906117bf565b925050819055506060600084036111055782600160008060008c815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110c191906117bf565b925050819055506040518060400160405280600e81526020017f506c6179657220312077696e732100000000000000000000000000000000000081525090506111c9565b82600160008060008c815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461118991906117bf565b925050819055506040518060400160405280600e81526020017f506c6179657220322077696e732100000000000000000000000000000000000081525090505b877f8267de97e9e9544223efef3950909bca0e0956a48e9216237ae894080da3761f826040516111f99190611b27565b60405180910390a25050505050505050565b600080fd5b6000819050919050565b61122381611210565b811461122e57600080fd5b50565b6000813590506112408161121a565b92915050565b60006020828403121561125c5761125b61120b565b5b600061126a84828501611231565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129e82611273565b9050919050565b6112ae81611293565b82525050565b6112bd81611210565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611303576113026112c3565b5b50565b6000819050611314826112f2565b919050565b600061132482611306565b9050919050565b61133481611319565b82525050565b600060a08201905061134f60008301886112a5565b61135c60208301876112a5565b61136960408301866112b4565b61137660608301856112b4565b611383608083018461132b565b9695505050505050565b60006020820190506113a260008301846112b4565b92915050565b60006113b382611273565b9050919050565b6113c3816113a8565b82525050565b60006020820190506113de60008301846113ba565b92915050565b6113ed816113a8565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b6000602082840312156114265761142561120b565b5b6000611434848285016113fb565b91505092915050565b600082825260208201905092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b600061148460148361143d565b915061148f8261144e565b602082019050919050565b600060208201905081810360008301526114b381611477565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006114f060178361143d565b91506114fb826114ba565b602082019050919050565b6000602082019050818103600083015261151f816114e3565b9050919050565b7f4e6f206665657320746f20776974686472617700000000000000000000000000600082015250565b600061155c60138361143d565b915061156782611526565b602082019050919050565b6000602082019050818103600083015261158b8161154f565b9050919050565b7f43757272656e7420737461746520646f6573206e6f7420616c6c6f772074686960008201527f7320616374696f6e000000000000000000000000000000000000000000000000602082015250565b60006115ee60288361143d565b91506115f982611592565b604082019050919050565b6000602082019050818103600083015261161d816115e1565b9050919050565b7f4f6e6c79206120706c61796572206f66207468652067616d652063616e20726560008201527f7365742069740000000000000000000000000000000000000000000000000000602082015250565b600061168060268361143d565b915061168b82611624565b604082019050919050565b600060208201905081810360008301526116af81611673565b9050919050565b7f53656e742065746865722073686f756c6420626520657175616c20746f20626560008201527f7420616d6f756e74000000000000000000000000000000000000000000000000602082015250565b600061171260288361143d565b915061171d826116b6565b604082019050919050565b6000602082019050818103600083015261174181611705565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061178282611210565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117b4576117b3611748565b5b600182019050919050565b60006117ca82611210565b91506117d583611210565b92508282019050808211156117ed576117ec611748565b5b92915050565b7f54696d65206c696d697420666f72206a6f696e696e67207468652067616d652060008201527f6861732070617373656400000000000000000000000000000000000000000000602082015250565b600061184f602a8361143d565b915061185a826117f3565b604082019050919050565b6000602082019050818103600083015261187e81611842565b9050919050565b7f47616d6520686173206e6f74207965742074696d6564206f7574000000000000600082015250565b60006118bb601a8361143d565b91506118c682611885565b602082019050919050565b600060208201905081810360008301526118ea816118ae565b9050919050565b60006118fc82611210565b915061190783611210565b925082820390508181111561191f5761191e611748565b5b92915050565b60008160601b9050919050565b600061193d82611925565b9050919050565b600061194f82611932565b9050919050565b61196761196282611293565b611944565b82525050565b6000819050919050565b6000819050919050565b61199261198d8261196d565b611977565b82525050565b60006119a48286611956565b6014820191506119b48285611956565b6014820191506119c48284611981565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a0f82611210565b9150611a1a83611210565b925082611a2a57611a296119d5565b5b828206905092915050565b6000611a4082611210565b9150611a4b83611210565b9250828202611a5981611210565b91508282048414831517611a7057611a6f611748565b5b5092915050565b6000611a8282611210565b9150611a8d83611210565b925082611a9d57611a9c6119d5565b5b828204905092915050565b600081519050919050565b60005b83811015611ad1578082015181840152602081019050611ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611af982611aa8565b611b03818561143d565b9350611b13818560208601611ab3565b611b1c81611add565b840191505092915050565b60006020820190508181036000830152611b418184611aee565b90509291505056fea2646970667358221220f08d054962917ad16b6082efd2dbb7d422da4af3e13cb3bd03c6164d3ccc507b64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80638da5cb5b1161007f578063e5ed1d5911610059578063e5ed1d5914610236578063efaa55a014610252578063f3f437031461026e578063fa7b7314146102ab576100c2565b80638da5cb5b146101b55780639003adfe146101e0578063c08d1fe51461020b576100c2565b8063117a5b90146100c75780631bb412d6146101085780633ccfd60b14610133578063476343ee1461014a5780634cf052d5146101615780637fd6f15c1461018a575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611246565b6102d4565b6040516100ff95949392919061133a565b60405180910390f35b34801561011457600080fd5b5061011d610357565b60405161012a919061138d565b60405180910390f35b34801561013f57600080fd5b5061014861035d565b005b34801561015657600080fd5b5061015f6104c1565b005b34801561016d57600080fd5b5061018860048036038101906101839190611246565b6105ed565b005b34801561019657600080fd5b5061019f6108d6565b6040516101ac919061138d565b60405180910390f35b3480156101c157600080fd5b506101ca6108db565b6040516101d791906113c9565b60405180910390f35b3480156101ec57600080fd5b506101f5610901565b604051610202919061138d565b60405180910390f35b34801561021757600080fd5b50610220610907565b60405161022d919061138d565b60405180910390f35b610250600480360381019061024b9190611246565b61090d565b005b61026c60048036038101906102679190611246565b610a72565b005b34801561027a57600080fd5b5061029560048036038101906102909190611410565b610c91565b6040516102a2919061138d565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190611246565b610ca9565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103db9061149a565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561046f573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040516104b6919061138d565b60405180910390a250565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890611506565b60405180910390fd5b600060035490506000811161059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290611572565b60405180910390fd5b60006003819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105e9573d6000803e3d6000fd5b5050565b806002806002811115610603576106026112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610638576106376112c3565b5b14610678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066f90611604565b60405180910390fd5b60008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610747575060008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d90611696565b60405180910390fd5b600080600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060020181905550600080600085815260200190815260200160002060030181905550600080600085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561089f5761089e6112c3565b5b0217905550827fde24ae18b2bda089720ca38332df93ab6195d7b5b3b0981ccae6b33e0a6c3f9b60405160405180910390a2505050565b600581565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b61038481565b80341461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690611728565b60405180910390fd5b33600080600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600080600254815260200190815260200160002060020181905550426000806002548152602001908152602001600020600301819055506001600080600254815260200190815260200160002060040160006101000a81548160ff02191690836002811115610a1857610a176112c3565b5b02179055506002547ffadb9547847a0c2c31f4c02590545e318d33d7aae99071caecf3fa4ce3cd7dca33604051610a4f91906113c9565b60405180910390a260026000815480929190610a6a90611777565b919050555050565b806001806002811115610a8857610a876112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610abd57610abc6112c3565b5b14610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af490611604565b60405180910390fd5b600080848152602001908152602001600020600201543414610b54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4b90611728565b60405180910390fd5b61038460008085815260200190815260200160002060030154610b7791906117bf565b421115610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb090611865565b60405180910390fd5b3360008085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610c4657610c456112c3565b5b0217905550827f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd633604051610c7b91906113c9565b60405180910390a2610c8c83610e84565b505050565b60016020528060005260406000206000915090505481565b806001806002811115610cbf57610cbe6112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610cf457610cf36112c3565b5b14610d34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2b90611604565b60405180910390fd5b61038460008085815260200190815260200160002060030154610d5791906117bf565b4211610d98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8f906118d1565b60405180910390fd5b600080848152602001908152602001600020600201546001600080600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e3191906117bf565b92505081905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610e7157610e706112c3565b5b0217905550610e7f836105ed565b505050565b806002806002811115610e9a57610e996112c3565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610ecf57610ece6112c3565b5b14610f0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0690611604565b60405180910390fd5b600080600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600143610f8a91906118f1565b40604051602001610f9d93929190611998565b604051602081830303815290604052805190602001209050600060028260001c610fc79190611a04565b90506000600260008088815260200190815260200160002060020154610fed9190611a35565b9050600060646005836110009190611a35565b61100a9190611a77565b9050808261101891906118f1565b9150806003600082825461102c91906117bf565b925050819055506060600084036111055782600160008060008c815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110c191906117bf565b925050819055506040518060400160405280600e81526020017f506c6179657220312077696e732100000000000000000000000000000000000081525090506111c9565b82600160008060008c815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461118991906117bf565b925050819055506040518060400160405280600e81526020017f506c6179657220322077696e732100000000000000000000000000000000000081525090505b877f8267de97e9e9544223efef3950909bca0e0956a48e9216237ae894080da3761f826040516111f99190611b27565b60405180910390a25050505050505050565b600080fd5b6000819050919050565b61122381611210565b811461122e57600080fd5b50565b6000813590506112408161121a565b92915050565b60006020828403121561125c5761125b61120b565b5b600061126a84828501611231565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061129e82611273565b9050919050565b6112ae81611293565b82525050565b6112bd81611210565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110611303576113026112c3565b5b50565b6000819050611314826112f2565b919050565b600061132482611306565b9050919050565b61133481611319565b82525050565b600060a08201905061134f60008301886112a5565b61135c60208301876112a5565b61136960408301866112b4565b61137660608301856112b4565b611383608083018461132b565b9695505050505050565b60006020820190506113a260008301846112b4565b92915050565b60006113b382611273565b9050919050565b6113c3816113a8565b82525050565b60006020820190506113de60008301846113ba565b92915050565b6113ed816113a8565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b6000602082840312156114265761142561120b565b5b6000611434848285016113fb565b91505092915050565b600082825260208201905092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b600061148460148361143d565b915061148f8261144e565b602082019050919050565b600060208201905081810360008301526114b381611477565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b60006114f060178361143d565b91506114fb826114ba565b602082019050919050565b6000602082019050818103600083015261151f816114e3565b9050919050565b7f4e6f206665657320746f20776974686472617700000000000000000000000000600082015250565b600061155c60138361143d565b915061156782611526565b602082019050919050565b6000602082019050818103600083015261158b8161154f565b9050919050565b7f43757272656e7420737461746520646f6573206e6f7420616c6c6f772074686960008201527f7320616374696f6e000000000000000000000000000000000000000000000000602082015250565b60006115ee60288361143d565b91506115f982611592565b604082019050919050565b6000602082019050818103600083015261161d816115e1565b9050919050565b7f4f6e6c79206120706c61796572206f66207468652067616d652063616e20726560008201527f7365742069740000000000000000000000000000000000000000000000000000602082015250565b600061168060268361143d565b915061168b82611624565b604082019050919050565b600060208201905081810360008301526116af81611673565b9050919050565b7f53656e742065746865722073686f756c6420626520657175616c20746f20626560008201527f7420616d6f756e74000000000000000000000000000000000000000000000000602082015250565b600061171260288361143d565b915061171d826116b6565b604082019050919050565b6000602082019050818103600083015261174181611705565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061178282611210565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117b4576117b3611748565b5b600182019050919050565b60006117ca82611210565b91506117d583611210565b92508282019050808211156117ed576117ec611748565b5b92915050565b7f54696d65206c696d697420666f72206a6f696e696e67207468652067616d652060008201527f6861732070617373656400000000000000000000000000000000000000000000602082015250565b600061184f602a8361143d565b915061185a826117f3565b604082019050919050565b6000602082019050818103600083015261187e81611842565b9050919050565b7f47616d6520686173206e6f74207965742074696d6564206f7574000000000000600082015250565b60006118bb601a8361143d565b91506118c682611885565b602082019050919050565b600060208201905081810360008301526118ea816118ae565b9050919050565b60006118fc82611210565b915061190783611210565b925082820390508181111561191f5761191e611748565b5b92915050565b60008160601b9050919050565b600061193d82611925565b9050919050565b600061194f82611932565b9050919050565b61196761196282611293565b611944565b82525050565b6000819050919050565b6000819050919050565b61199261198d8261196d565b611977565b82525050565b60006119a48286611956565b6014820191506119b48285611956565b6014820191506119c48284611981565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611a0f82611210565b9150611a1a83611210565b925082611a2a57611a296119d5565b5b828206905092915050565b6000611a4082611210565b9150611a4b83611210565b9250828202611a5981611210565b91508282048414831517611a7057611a6f611748565b5b5092915050565b6000611a8282611210565b9150611a8d83611210565b925082611a9d57611a9c6119d5565b5b828204905092915050565b600081519050919050565b60005b83811015611ad1578082015181840152602081019050611ab6565b60008484015250505050565b6000601f19601f8301169050919050565b6000611af982611aa8565b611b03818561143d565b9350611b13818560208601611ab3565b611b1c81611add565b840191505092915050565b60006020820190508181036000830152611b418184611aee565b90509291505056fea2646970667358221220f08d054962917ad16b6082efd2dbb7d422da4af3e13cb3bd03c6164d3ccc507b64736f6c63430008110033",
  "devdoc": {
    "details": "A coin flip game where two players bet equal amounts of ether. The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.",
    "kind": "dev",
    "methods": {},
    "title": "BaseFlip",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "games",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Game)18_storage)"
      },
      {
        "astId": 27,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "pendingWithdrawals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 29,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "gameIdCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "collectedFees",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_enum(GameState)6": {
        "encoding": "inplace",
        "label": "enum BaseFlip.GameState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Game)18_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BaseFlip.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)18_storage"
      },
      "t_struct(Game)18_storage": {
        "encoding": "inplace",
        "label": "struct BaseFlip.Game",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "player1",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 10,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "player2",
            "offset": 0,
            "slot": "1",
            "type": "t_address_payable"
          },
          {
            "astId": 12,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "betAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "startTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "currentState",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(GameState)6"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}