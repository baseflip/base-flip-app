{
  "address": "0x70751cF31d8f31d6622760D243F5E4e150efb20b",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "winner",
          "type": "string"
        }
      ],
      "name": "CoinFlipped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "GameReset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "GameStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "PlayerJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "checkGameTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectedFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gameIdCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "games",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "player1",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "player2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "betAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "enum BaseFlip.GameState",
          "name": "currentState",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "joinGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gameId",
          "type": "uint256"
        }
      ],
      "name": "resetGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timeLimit",
          "type": "uint256"
        }
      ],
      "name": "setTimeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_betAmount",
          "type": "uint256"
        }
      ],
      "name": "startGame",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5a6d97604c7a990f296d5270bcae0269b690e540da45f6ff6db6c414f2c4ed0a",
  "receipt": {
    "to": null,
    "from": "0x46d2bFa40A0f95B5523570bf62F9d680BBcB56fE",
    "contractAddress": "0x70751cF31d8f31d6622760D243F5E4e150efb20b",
    "transactionIndex": 1,
    "gasUsed": "1725051",
    "logsBloom": "0x
    "blockHash": "0x888286e179e2c79df469eba78d9dee9762dc38f01a905d160ccc65498f7c8d26",
    "transactionHash": "0x5a6d97604c7a990f296d5270bcae0269b690e540da45f6ff6db6c414f2c4ed0a",
    "logs": [],
    "blockNumber": 8085769,
    "cumulativeGasUsed": "1771904",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7542779b2b5780b94381ab1bde50709c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"winner\",\"type\":\"string\"}],\"name\":\"CoinFlipped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"GameReset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"checkGameTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameIdCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"player1\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"player2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"betAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"enum BaseFlip.GameState\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"joinGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"resetGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeLimit\",\"type\":\"uint256\"}],\"name\":\"setTimeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_betAmount\",\"type\":\"uint256\"}],\"name\":\"startGame\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A coin flip game where two players bet equal amounts of ether. The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.\",\"kind\":\"dev\",\"methods\":{\"checkGameTimeout(uint256)\":{\"details\":\"Check if a game has timed out and refund the first player's bet if it has.\",\"params\":{\"gameId\":\"The ID of the game to check.\"}},\"joinGame(uint256)\":{\"details\":\"Join an existing game.\",\"params\":{\"gameId\":\"The ID of the game to join.\"}},\"resetGame(uint256)\":{\"details\":\"Reset a game.\",\"params\":{\"gameId\":\"The ID of the game to reset.\"}},\"setFeePercent(uint256)\":{\"details\":\"Set the fee percent.\",\"params\":{\"_feePercent\":\"The new fee percent.\"}},\"setTimeLimit(uint256)\":{\"details\":\"Set the time limit for joining a game.\",\"params\":{\"_timeLimit\":\"The new time limit.\"}},\"startGame(uint256)\":{\"details\":\"Start a new game with a specified bet amount.\",\"params\":{\"_betAmount\":\"The amount of ether to bet.\"}},\"withdraw()\":{\"details\":\"Withdraw winnings.\"},\"withdrawFees()\":{\"details\":\"Withdraw collected fees.\"}},\"title\":\"BaseFlip\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaseFlip.sol\":\"BaseFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BaseFlip.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title BaseFlip\\n * @dev A coin flip game where two players bet equal amounts of ether.\\n * The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.\\n */\\ncontract BaseFlip {\\n    enum GameState { WaitingForPlayer, GameStarted, GameOver }\\n\\n    struct Game {\\n        address payable player1;\\n        address payable player2;\\n        uint betAmount;\\n        uint startTime;\\n        GameState currentState;\\n    }\\n\\n    mapping(uint => Game) public games;\\n    mapping(address => uint) public pendingWithdrawals;\\n    uint public gameIdCounter;\\n    uint public feePercent = 5;\\n    uint public timeLimit = 15 minutes;\\n    uint public collectedFees;\\n\\n    address public owner;\\n\\n    event GameStarted(uint indexed gameId, address player);\\n    event PlayerJoined(uint indexed gameId, address player);\\n    event CoinFlipped(uint indexed gameId, string winner);\\n    event GameReset(uint indexed gameId);\\n    event Withdrawal(address indexed user, uint amount);\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check the current state of the game.\\n     * @param gameId The ID of the game to check.\\n     * @param _state The expected state of the game.\\n     */\\n    modifier inState(uint gameId, GameState _state) {\\n        require(games[gameId].currentState == _state, \\\"Current state does not allow this action\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Start a new game with a specified bet amount.\\n     * @param _betAmount The amount of ether to bet.\\n     */\\n    function startGame(uint _betAmount) public payable {\\n        require(msg.value == _betAmount, \\\"Sent ether should be equal to bet amount\\\");\\n\\n        games[gameIdCounter].player1 = payable(msg.sender);\\n        games[gameIdCounter].betAmount = _betAmount;\\n        games[gameIdCounter].startTime = block.timestamp;\\n        games[gameIdCounter].currentState = GameState.GameStarted;\\n\\n        emit GameStarted(gameIdCounter, msg.sender);\\n        \\n        gameIdCounter++;\\n    }\\n\\n    /**\\n     * @dev Join an existing game.\\n     * @param gameId The ID of the game to join.\\n     */\\n    function joinGame(uint gameId) public payable inState(gameId, GameState.GameStarted) {\\n        require(msg.value == games[gameId].betAmount, \\\"Sent ether should be equal to bet amount\\\");\\n        require(block.timestamp <= games[gameId].startTime + timeLimit, \\\"Time limit for joining the game has passed\\\");\\n\\n        games[gameId].player2 = payable(msg.sender);\\n        games[gameId].currentState = GameState.GameOver;\\n        emit PlayerJoined(gameId, msg.sender);\\n\\n        determineWinner(gameId);\\n    }\\n\\n    /**\\n     * @dev Determine the winner of a game pseudo-randomly.\\n     * @param gameId The ID of the game.\\n     */\\n    function determineWinner(uint gameId) private inState(gameId, GameState.GameOver) {\\n        bytes32 hashed = keccak256(abi.encodePacked(games[gameId].player1, games[gameId].player2, blockhash(block.number - 1)));\\n        uint randomNumber = uint(hashed) % 2;\\n        uint winnings = games[gameId].betAmount * 2;\\n        uint fee = winnings * feePercent / 1000;\\n\\n        winnings = winnings - fee;\\n        collectedFees += fee;\\n\\n        string memory winningPlayer;\\n\\n        if(randomNumber == 0) {\\n            pendingWithdrawals[games[gameId].player1] += winnings;\\n            winningPlayer = \\\"Player 1 wins!\\\";\\n        } else {\\n            pendingWithdrawals[games[gameId].player2] += winnings;\\n            winningPlayer = \\\"Player 2 wins!\\\";\\n        }\\n\\n        emit CoinFlipped(gameId, winningPlayer);\\n    }\\n\\n    /**\\n     * @dev Withdraw winnings.\\n     */\\n    function withdraw() public {\\n        uint amount = pendingWithdrawals[msg.sender];\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        pendingWithdrawals[msg.sender] = 0;\\n        payable(msg.sender).transfer(amount);\\n\\n        emit Withdrawal(msg.sender, amount);\\n    }\\n\\n    /**\\n     * @dev Reset a game.\\n     * @param gameId The ID of the game to reset.\\n     */\\n    function resetGame(uint gameId) public inState(gameId, GameState.GameOver) {\\n        // Only allow a player of the game to reset it\\n        require(msg.sender == games[gameId].player1 || msg.sender == games[gameId].player2, \\\"Only a player of the game can reset it\\\");\\n\\n        // Reset game details\\n        games[gameId].player1 = payable(address(0));\\n        games[gameId].player2 = payable(address(0));\\n        games[gameId].betAmount = 0;\\n        games[gameId].startTime = 0;\\n        games[gameId].currentState = GameState.WaitingForPlayer;\\n\\n        emit GameReset(gameId);\\n    }\\n\\n    /**\\n     * @dev Check if a game has timed out and refund the first player's bet if it has.\\n     * @param gameId The ID of the game to check.\\n     */\\n    function checkGameTimeout(uint gameId) public inState(gameId, GameState.GameStarted) {\\n        require(block.timestamp > games[gameId].startTime + timeLimit, \\\"Game has not yet timed out\\\");\\n\\n        pendingWithdrawals[games[gameId].player1] += games[gameId].betAmount;\\n        games[gameId].currentState = GameState.GameOver;\\n\\n        resetGame(gameId);\\n    }\\n\\n    /**\\n     * @dev Set the fee percent.\\n     * @param _feePercent The new fee percent.\\n     */\\n    function setFeePercent(uint _feePercent) public onlyOwner {\\n        feePercent = _feePercent;\\n    }\\n\\n    /**\\n     * @dev Set the time limit for joining a game.\\n     * @param _timeLimit The new time limit.\\n     */\\n    function setTimeLimit(uint _timeLimit) public onlyOwner {\\n        timeLimit = _timeLimit;\\n    }\\n\\n    /**\\n     * @dev Withdraw collected fees.\\n     */\\n    function withdrawFees() public onlyOwner {\\n        uint fees = collectedFees;\\n        require(fees > 0, \\\"No fees to withdraw\\\");\\n\\n        collectedFees = 0;\\n        payable(msg.sender).transfer(fees);\\n    }\\n}\\n\",\"keccak256\":\"0xe143ad8ad1e99104b3f654d4c82db70a68e39025761e41c254f6064e47af324f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600560035561038460045534801561001b57600080fd5b5033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d2e8061006c6000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063e5ed1d5911610059578063e5ed1d59146102ae578063efaa55a0146102ca578063f3f43703146102e6578063fa7b731414610323576100e8565b80638da5cb5b146102045780639003adfe1461022f578063c08d1fe51461025a578063e2889c8214610285576100e8565b8063476343ee116100c6578063476343ee146101705780634cf052d5146101875780637ce3489b146101b05780637fd6f15c146101d9576100e8565b8063117a5b90146100ed5780631bb412d61461012e5780633ccfd60b14610159575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906113f5565b61034c565b6040516101259594939291906114e9565b60405180910390f35b34801561013a57600080fd5b506101436103cf565b604051610150919061153c565b60405180910390f35b34801561016557600080fd5b5061016e6103d5565b005b34801561017c57600080fd5b50610185610539565b005b34801561019357600080fd5b506101ae60048036038101906101a991906113f5565b610665565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906113f5565b61094e565b005b3480156101e557600080fd5b506101ee6109e8565b6040516101fb919061153c565b60405180910390f35b34801561021057600080fd5b506102196109ee565b6040516102269190611578565b60405180910390f35b34801561023b57600080fd5b50610244610a14565b604051610251919061153c565b60405180910390f35b34801561026657600080fd5b5061026f610a1a565b60405161027c919061153c565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a791906113f5565b610a20565b005b6102c860048036038101906102c391906113f5565b610aba565b005b6102e460048036038101906102df91906113f5565b610c1f565b005b3480156102f257600080fd5b5061030d600480360381019061030891906115bf565b610e3e565b60405161031a919061153c565b60405180910390f35b34801561032f57600080fd5b5061034a600480360381019061034591906113f5565b610e56565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390611649565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104e7573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658260405161052e919061153c565b60405180910390a250565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c0906116b5565b60405180910390fd5b6000600554905060008111610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611721565b60405180910390fd5b60006005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610661573d6000803e3d6000fd5b5050565b80600280600281111561067b5761067a611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff1660028111156106b0576106af611472565b5b146106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e7906117b3565b60405180910390fd5b60008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bf575060008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590611845565b60405180910390fd5b600080600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060020181905550600080600085815260200190815260200160002060030181905550600080600085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561091757610916611472565b5b0217905550827fde24ae18b2bda089720ca38332df93ab6195d7b5b3b0981ccae6b33e0a6c3f9b60405160405180910390a2505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906116b5565b60405180910390fd5b8060038190555050565b60035481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60045481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa7906116b5565b60405180910390fd5b8060048190555050565b803414610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906118d7565b60405180910390fd5b33600080600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600080600254815260200190815260200160002060020181905550426000806002548152602001908152602001600020600301819055506001600080600254815260200190815260200160002060040160006101000a81548160ff02191690836002811115610bc557610bc4611472565b5b02179055506002547ffadb9547847a0c2c31f4c02590545e318d33d7aae99071caecf3fa4ce3cd7dca33604051610bfc9190611578565b60405180910390a260026000815480929190610c1790611926565b919050555050565b806001806002811115610c3557610c34611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610c6a57610c69611472565b5b14610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca1906117b3565b60405180910390fd5b600080848152602001908152602001600020600201543414610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf8906118d7565b60405180910390fd5b60045460008085815260200190815260200160002060030154610d24919061196e565b421115610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90611a14565b60405180910390fd5b3360008085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610df357610df2611472565b5b0217905550827f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd633604051610e289190611578565b60405180910390a2610e3983611031565b505050565b60016020528060005260406000206000915090505481565b806001806002811115610e6c57610e6b611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610ea157610ea0611472565b5b14610ee1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed8906117b3565b60405180910390fd5b60045460008085815260200190815260200160002060030154610f04919061196e565b4211610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90611a80565b60405180910390fd5b600080848152602001908152602001600020600201546001600080600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fde919061196e565b92505081905550600260008085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561101e5761101d611472565b5b021790555061102c83610665565b505050565b80600280600281111561104757611046611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff16600281111561107c5761107b611472565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906117b3565b60405180910390fd5b600080600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001436111379190611aa0565b4060405160200161114a93929190611b47565b604051602081830303815290604052805190602001209050600060028260001c6111749190611bb3565b9050600060026000808881526020019081526020016000206002015461119a9190611be4565b905060006103e8600354836111af9190611be4565b6111b99190611c26565b905080826111c79190611aa0565b915080600560008282546111db919061196e565b925050819055506060600084036112b45782600160008060008c815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611270919061196e565b925050819055506040518060400160405280600e81526020017f506c6179657220312077696e73210000000000000000000000000000000000008152509050611378565b82600160008060008c815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611338919061196e565b925050819055506040518060400160405280600e81526020017f506c6179657220322077696e732100000000000000000000000000000000000081525090505b877f8267de97e9e9544223efef3950909bca0e0956a48e9216237ae894080da3761f826040516113a89190611cd6565b60405180910390a25050505050505050565b600080fd5b6000819050919050565b6113d2816113bf565b81146113dd57600080fd5b50565b6000813590506113ef816113c9565b92915050565b60006020828403121561140b5761140a6113ba565b5b6000611419848285016113e0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144d82611422565b9050919050565b61145d81611442565b82525050565b61146c816113bf565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106114b2576114b1611472565b5b50565b60008190506114c3826114a1565b919050565b60006114d3826114b5565b9050919050565b6114e3816114c8565b82525050565b600060a0820190506114fe6000830188611454565b61150b6020830187611454565b6115186040830186611463565b6115256060830185611463565b61153260808301846114da565b9695505050505050565b60006020820190506115516000830184611463565b92915050565b600061156282611422565b9050919050565b61157281611557565b82525050565b600060208201905061158d6000830184611569565b92915050565b61159c81611557565b81146115a757600080fd5b50565b6000813590506115b981611593565b92915050565b6000602082840312156115d5576115d46113ba565b5b60006115e3848285016115aa565b91505092915050565b600082825260208201905092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b60006116336014836115ec565b915061163e826115fd565b602082019050919050565b6000602082019050818103600083015261166281611626565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b600061169f6017836115ec565b91506116aa82611669565b602082019050919050565b600060208201905081810360008301526116ce81611692565b9050919050565b7f4e6f206665657320746f20776974686472617700000000000000000000000000600082015250565b600061170b6013836115ec565b9150611716826116d5565b602082019050919050565b6000602082019050818103600083015261173a816116fe565b9050919050565b7f43757272656e7420737461746520646f6573206e6f7420616c6c6f772074686960008201527f7320616374696f6e000000000000000000000000000000000000000000000000602082015250565b600061179d6028836115ec565b91506117a882611741565b604082019050919050565b600060208201905081810360008301526117cc81611790565b9050919050565b7f4f6e6c79206120706c61796572206f66207468652067616d652063616e20726560008201527f7365742069740000000000000000000000000000000000000000000000000000602082015250565b600061182f6026836115ec565b915061183a826117d3565b604082019050919050565b6000602082019050818103600083015261185e81611822565b9050919050565b7f53656e742065746865722073686f756c6420626520657175616c20746f20626560008201527f7420616d6f756e74000000000000000000000000000000000000000000000000602082015250565b60006118c16028836115ec565b91506118cc82611865565b604082019050919050565b600060208201905081810360008301526118f0816118b4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611931826113bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611963576119626118f7565b5b600182019050919050565b6000611979826113bf565b9150611984836113bf565b925082820190508082111561199c5761199b6118f7565b5b92915050565b7f54696d65206c696d697420666f72206a6f696e696e67207468652067616d652060008201527f6861732070617373656400000000000000000000000000000000000000000000602082015250565b60006119fe602a836115ec565b9150611a09826119a2565b604082019050919050565b60006020820190508181036000830152611a2d816119f1565b9050919050565b7f47616d6520686173206e6f74207965742074696d6564206f7574000000000000600082015250565b6000611a6a601a836115ec565b9150611a7582611a34565b602082019050919050565b60006020820190508181036000830152611a9981611a5d565b9050919050565b6000611aab826113bf565b9150611ab6836113bf565b9250828203905081811115611ace57611acd6118f7565b5b92915050565b60008160601b9050919050565b6000611aec82611ad4565b9050919050565b6000611afe82611ae1565b9050919050565b611b16611b1182611442565b611af3565b82525050565b6000819050919050565b6000819050919050565b611b41611b3c82611b1c565b611b26565b82525050565b6000611b538286611b05565b601482019150611b638285611b05565b601482019150611b738284611b30565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bbe826113bf565b9150611bc9836113bf565b925082611bd957611bd8611b84565b5b828206905092915050565b6000611bef826113bf565b9150611bfa836113bf565b9250828202611c08816113bf565b91508282048414831517611c1f57611c1e6118f7565b5b5092915050565b6000611c31826113bf565b9150611c3c836113bf565b925082611c4c57611c4b611b84565b5b828204905092915050565b600081519050919050565b60005b83811015611c80578082015181840152602081019050611c65565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ca882611c57565b611cb281856115ec565b9350611cc2818560208601611c62565b611ccb81611c8c565b840191505092915050565b60006020820190508181036000830152611cf08184611c9d565b90509291505056fea26469706673582212207a309ed4e244e16c9f52756cacef2a3b23999f2c0f3430d00b6089489508ba4c64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063e5ed1d5911610059578063e5ed1d59146102ae578063efaa55a0146102ca578063f3f43703146102e6578063fa7b731414610323576100e8565b80638da5cb5b146102045780639003adfe1461022f578063c08d1fe51461025a578063e2889c8214610285576100e8565b8063476343ee116100c6578063476343ee146101705780634cf052d5146101875780637ce3489b146101b05780637fd6f15c146101d9576100e8565b8063117a5b90146100ed5780631bb412d61461012e5780633ccfd60b14610159575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f91906113f5565b61034c565b6040516101259594939291906114e9565b60405180910390f35b34801561013a57600080fd5b506101436103cf565b604051610150919061153c565b60405180910390f35b34801561016557600080fd5b5061016e6103d5565b005b34801561017c57600080fd5b50610185610539565b005b34801561019357600080fd5b506101ae60048036038101906101a991906113f5565b610665565b005b3480156101bc57600080fd5b506101d760048036038101906101d291906113f5565b61094e565b005b3480156101e557600080fd5b506101ee6109e8565b6040516101fb919061153c565b60405180910390f35b34801561021057600080fd5b506102196109ee565b6040516102269190611578565b60405180910390f35b34801561023b57600080fd5b50610244610a14565b604051610251919061153c565b60405180910390f35b34801561026657600080fd5b5061026f610a1a565b60405161027c919061153c565b60405180910390f35b34801561029157600080fd5b506102ac60048036038101906102a791906113f5565b610a20565b005b6102c860048036038101906102c391906113f5565b610aba565b005b6102e460048036038101906102df91906113f5565b610c1f565b005b3480156102f257600080fd5b5061030d600480360381019061030891906115bf565b610e3e565b60405161031a919061153c565b60405180910390f35b34801561032f57600080fd5b5061034a600480360381019061034591906113f5565b610e56565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60025481565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045390611649565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104e7573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658260405161052e919061153c565b60405180910390a250565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c0906116b5565b60405180910390fd5b6000600554905060008111610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060a90611721565b60405180910390fd5b60006005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610661573d6000803e3d6000fd5b5050565b80600280600281111561067b5761067a611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff1660028111156106b0576106af611472565b5b146106f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e7906117b3565b60405180910390fd5b60008084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107bf575060008084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590611845565b60405180910390fd5b600080600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080600085815260200190815260200160002060020181905550600080600085815260200190815260200160002060030181905550600080600085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561091757610916611472565b5b0217905550827fde24ae18b2bda089720ca38332df93ab6195d7b5b3b0981ccae6b33e0a6c3f9b60405160405180910390a2505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d5906116b5565b60405180910390fd5b8060038190555050565b60035481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60045481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa7906116b5565b60405180910390fd5b8060048190555050565b803414610afc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af3906118d7565b60405180910390fd5b33600080600254815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600080600254815260200190815260200160002060020181905550426000806002548152602001908152602001600020600301819055506001600080600254815260200190815260200160002060040160006101000a81548160ff02191690836002811115610bc557610bc4611472565b5b02179055506002547ffadb9547847a0c2c31f4c02590545e318d33d7aae99071caecf3fa4ce3cd7dca33604051610bfc9190611578565b60405180910390a260026000815480929190610c1790611926565b919050555050565b806001806002811115610c3557610c34611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610c6a57610c69611472565b5b14610caa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca1906117b3565b60405180910390fd5b600080848152602001908152602001600020600201543414610d01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf8906118d7565b60405180910390fd5b60045460008085815260200190815260200160002060030154610d24919061196e565b421115610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d90611a14565b60405180910390fd5b3360008085815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008085815260200190815260200160002060040160006101000a81548160ff02191690836002811115610df357610df2611472565b5b0217905550827f87969bc7faf902221a147b95ceba76e011c5efb0339a0a8ee7a2bb82d9cfbbd633604051610e289190611578565b60405180910390a2610e3983611031565b505050565b60016020528060005260406000206000915090505481565b806001806002811115610e6c57610e6b611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff166002811115610ea157610ea0611472565b5b14610ee1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed8906117b3565b60405180910390fd5b60045460008085815260200190815260200160002060030154610f04919061196e565b4211610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90611a80565b60405180910390fd5b600080848152602001908152602001600020600201546001600080600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610fde919061196e565b92505081905550600260008085815260200190815260200160002060040160006101000a81548160ff0219169083600281111561101e5761101d611472565b5b021790555061102c83610665565b505050565b80600280600281111561104757611046611472565b5b60008084815260200190815260200160002060040160009054906101000a900460ff16600281111561107c5761107b611472565b5b146110bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b3906117b3565b60405180910390fd5b600080600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166001436111379190611aa0565b4060405160200161114a93929190611b47565b604051602081830303815290604052805190602001209050600060028260001c6111749190611bb3565b9050600060026000808881526020019081526020016000206002015461119a9190611be4565b905060006103e8600354836111af9190611be4565b6111b99190611c26565b905080826111c79190611aa0565b915080600560008282546111db919061196e565b925050819055506060600084036112b45782600160008060008c815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611270919061196e565b925050819055506040518060400160405280600e81526020017f506c6179657220312077696e73210000000000000000000000000000000000008152509050611378565b82600160008060008c815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611338919061196e565b925050819055506040518060400160405280600e81526020017f506c6179657220322077696e732100000000000000000000000000000000000081525090505b877f8267de97e9e9544223efef3950909bca0e0956a48e9216237ae894080da3761f826040516113a89190611cd6565b60405180910390a25050505050505050565b600080fd5b6000819050919050565b6113d2816113bf565b81146113dd57600080fd5b50565b6000813590506113ef816113c9565b92915050565b60006020828403121561140b5761140a6113ba565b5b6000611419848285016113e0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061144d82611422565b9050919050565b61145d81611442565b82525050565b61146c816113bf565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106114b2576114b1611472565b5b50565b60008190506114c3826114a1565b919050565b60006114d3826114b5565b9050919050565b6114e3816114c8565b82525050565b600060a0820190506114fe6000830188611454565b61150b6020830187611454565b6115186040830186611463565b6115256060830185611463565b61153260808301846114da565b9695505050505050565b60006020820190506115516000830184611463565b92915050565b600061156282611422565b9050919050565b61157281611557565b82525050565b600060208201905061158d6000830184611569565b92915050565b61159c81611557565b81146115a757600080fd5b50565b6000813590506115b981611593565b92915050565b6000602082840312156115d5576115d46113ba565b5b60006115e3848285016115aa565b91505092915050565b600082825260208201905092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b60006116336014836115ec565b915061163e826115fd565b602082019050919050565b6000602082019050818103600083015261166281611626565b9050919050565b7f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000600082015250565b600061169f6017836115ec565b91506116aa82611669565b602082019050919050565b600060208201905081810360008301526116ce81611692565b9050919050565b7f4e6f206665657320746f20776974686472617700000000000000000000000000600082015250565b600061170b6013836115ec565b9150611716826116d5565b602082019050919050565b6000602082019050818103600083015261173a816116fe565b9050919050565b7f43757272656e7420737461746520646f6573206e6f7420616c6c6f772074686960008201527f7320616374696f6e000000000000000000000000000000000000000000000000602082015250565b600061179d6028836115ec565b91506117a882611741565b604082019050919050565b600060208201905081810360008301526117cc81611790565b9050919050565b7f4f6e6c79206120706c61796572206f66207468652067616d652063616e20726560008201527f7365742069740000000000000000000000000000000000000000000000000000602082015250565b600061182f6026836115ec565b915061183a826117d3565b604082019050919050565b6000602082019050818103600083015261185e81611822565b9050919050565b7f53656e742065746865722073686f756c6420626520657175616c20746f20626560008201527f7420616d6f756e74000000000000000000000000000000000000000000000000602082015250565b60006118c16028836115ec565b91506118cc82611865565b604082019050919050565b600060208201905081810360008301526118f0816118b4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611931826113bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611963576119626118f7565b5b600182019050919050565b6000611979826113bf565b9150611984836113bf565b925082820190508082111561199c5761199b6118f7565b5b92915050565b7f54696d65206c696d697420666f72206a6f696e696e67207468652067616d652060008201527f6861732070617373656400000000000000000000000000000000000000000000602082015250565b60006119fe602a836115ec565b9150611a09826119a2565b604082019050919050565b60006020820190508181036000830152611a2d816119f1565b9050919050565b7f47616d6520686173206e6f74207965742074696d6564206f7574000000000000600082015250565b6000611a6a601a836115ec565b9150611a7582611a34565b602082019050919050565b60006020820190508181036000830152611a9981611a5d565b9050919050565b6000611aab826113bf565b9150611ab6836113bf565b9250828203905081811115611ace57611acd6118f7565b5b92915050565b60008160601b9050919050565b6000611aec82611ad4565b9050919050565b6000611afe82611ae1565b9050919050565b611b16611b1182611442565b611af3565b82525050565b6000819050919050565b6000819050919050565b611b41611b3c82611b1c565b611b26565b82525050565b6000611b538286611b05565b601482019150611b638285611b05565b601482019150611b738284611b30565b602082019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611bbe826113bf565b9150611bc9836113bf565b925082611bd957611bd8611b84565b5b828206905092915050565b6000611bef826113bf565b9150611bfa836113bf565b9250828202611c08816113bf565b91508282048414831517611c1f57611c1e6118f7565b5b5092915050565b6000611c31826113bf565b9150611c3c836113bf565b925082611c4c57611c4b611b84565b5b828204905092915050565b600081519050919050565b60005b83811015611c80578082015181840152602081019050611c65565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ca882611c57565b611cb281856115ec565b9350611cc2818560208601611c62565b611ccb81611c8c565b840191505092915050565b60006020820190508181036000830152611cf08184611c9d565b90509291505056fea26469706673582212207a309ed4e244e16c9f52756cacef2a3b23999f2c0f3430d00b6089489508ba4c64736f6c63430008110033",
  "devdoc": {
    "details": "A coin flip game where two players bet equal amounts of ether. The winner is determined pseudo-randomly, and the winnings, minus a fee, are awarded to the winner.",
    "kind": "dev",
    "methods": {
      "checkGameTimeout(uint256)": {
        "details": "Check if a game has timed out and refund the first player's bet if it has.",
        "params": {
          "gameId": "The ID of the game to check."
        }
      },
      "joinGame(uint256)": {
        "details": "Join an existing game.",
        "params": {
          "gameId": "The ID of the game to join."
        }
      },
      "resetGame(uint256)": {
        "details": "Reset a game.",
        "params": {
          "gameId": "The ID of the game to reset."
        }
      },
      "setFeePercent(uint256)": {
        "details": "Set the fee percent.",
        "params": {
          "_feePercent": "The new fee percent."
        }
      },
      "setTimeLimit(uint256)": {
        "details": "Set the time limit for joining a game.",
        "params": {
          "_timeLimit": "The new time limit."
        }
      },
      "startGame(uint256)": {
        "details": "Start a new game with a specified bet amount.",
        "params": {
          "_betAmount": "The amount of ether to bet."
        }
      },
      "withdraw()": {
        "details": "Withdraw winnings."
      },
      "withdrawFees()": {
        "details": "Withdraw collected fees."
      }
    },
    "title": "BaseFlip",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "games",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_uint256,t_struct(Game)18_storage)"
      },
      {
        "astId": 27,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "pendingWithdrawals",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 29,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "gameIdCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 32,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "feePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 35,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "timeLimit",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "collectedFees",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/BaseFlip.sol:BaseFlip",
        "label": "owner",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_enum(GameState)6": {
        "encoding": "inplace",
        "label": "enum BaseFlip.GameState",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Game)18_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BaseFlip.Game)",
        "numberOfBytes": "32",
        "value": "t_struct(Game)18_storage"
      },
      "t_struct(Game)18_storage": {
        "encoding": "inplace",
        "label": "struct BaseFlip.Game",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "player1",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 10,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "player2",
            "offset": 0,
            "slot": "1",
            "type": "t_address_payable"
          },
          {
            "astId": 12,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "betAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "startTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "contracts/BaseFlip.sol:BaseFlip",
            "label": "currentState",
            "offset": 0,
            "slot": "4",
            "type": "t_enum(GameState)6"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}